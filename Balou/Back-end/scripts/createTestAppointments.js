import mongoose from 'mongoose';
import Appointment from '../models/Appointment.js';
import Utilisateur from '../models/UserModel.js';
import connectDB from '../config/db.js';

// Script pour cr√©er des rendez-vous de test
const createTestAppointments = async () => {
  try {
    console.log('üîÑ Connexion √† la base de donn√©es...');
    await connectDB();

    // Chercher un utilisateur existant ou cr√©er un utilisateur de test
    let testUser = await Utilisateur.findOne({ email: 'test@example.com' });
    
    if (!testUser) {
      console.log('üë§ Cr√©ation d\'un utilisateur de test...');
      testUser = new Utilisateur({
        firstName: 'John',
        lastName: 'Doe',
        phone: '+33123456789',
        email: 'test@example.com',
        password: 'hashedpassword123',
        role: 'utilisateur'
      });
      await testUser.save();
    }

    console.log('üìã Cr√©ation de rendez-vous de test...');

    const testAppointments = [
      {
        userId: testUser._id,
        fullName: 'John Doe',
        email: 'test@example.com',
        phone: '+33123456789',
        age: 35,
        gender: 'Homme',
        service: 'Consultation G√©n√©rale',
        date: new Date('2025-09-10'),
        time: '14:30',
        doctorName: 'Dr. Martin Dupont',
        notes: 'Fatigue g√©n√©rale et maux de t√™te',
        diagnostic: 'Syndrome grippal l√©ger. Repos recommand√©.',
        status: 'confirm√©',
        createdAt: new Date()
      },
      {
        userId: testUser._id,
        fullName: 'Marie Durand',
        email: 'marie@example.com',
        phone: '+33987654321',
        age: 28,
        gender: 'Femme',
        service: 'Cardiologie',
        date: new Date('2025-09-12'),
        time: '10:00',
        doctorName: 'Dr. Sophie Leclerc',
        notes: 'Palpitations et essoufflement √† l\'effort',
        diagnostic: 'Arythmie l√©g√®re. Surveillance cardiaque recommand√©e.',
        status: 'confirm√©',
        createdAt: new Date()
      },
      {
        userId: testUser._id,
        fullName: 'Pierre Martin',
        email: 'pierre@example.com',
        phone: '+33555123456',
        age: 42,
        gender: 'Homme',
        service: 'Gastro-ent√©rologie',
        date: new Date('2025-09-08'),
        time: '16:45',
        doctorName: 'Dr. Paul Moreau',
        notes: 'Douleurs abdominales r√©currentes',
        diagnostic: 'Gastrite chronique. Traitement m√©dical prescrit.',
        status: 'confirm√©',
        createdAt: new Date()
      },
      {
        userId: testUser._id,
        fullName: 'Am√©lie Rousseau',
        email: 'amelie@example.com',
        phone: '+33666789012',
        age: 30,
        gender: 'Femme',
        service: 'Dermatologie',
        date: new Date('2025-09-15'),
        time: '11:15',
        doctorName: 'Dr. Claire Fontaine',
        notes: 'Eruption cutan√©e sur les bras',
        status: 'en attente',
        createdAt: new Date()
      },
      {
        userId: testUser._id,
        fullName: 'Thomas Bernard',
        email: 'thomas@example.com',
        phone: '+33777890123',
        age: 38,
        gender: 'Homme',
        service: 'Orthop√©die',
        date: new Date('2025-09-20'),
        time: '09:30',
        doctorName: 'Dr. Michel Leroy',
        notes: 'Douleur au genou droit depuis 2 semaines',
        status: 'en attente',
        createdAt: new Date()
      }
    ];

    // Supprimer les anciens rendez-vous de test
    await Appointment.deleteMany({ 
      email: { 
        $in: ['test@example.com', 'marie@example.com', 'pierre@example.com', 'amelie@example.com', 'thomas@example.com'] 
      } 
    });

    // Ins√©rer les nouveaux rendez-vous
    const inserted = await Appointment.insertMany(testAppointments);
    
    console.log(`‚úÖ ${inserted.length} rendez-vous de test cr√©√©s avec succ√®s !`);
    console.log('üìä Rendez-vous cr√©√©s :');
    inserted.forEach((appt, index) => {
      console.log(`   ${index + 1}. ${appt.fullName} - ${appt.service} - ${appt.date.toLocaleDateString()} √† ${appt.time}`);
    });

    mongoose.connection.close();
    console.log('üîê Connexion ferm√©e.');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des rendez-vous de test:', error);
    process.exit(1);
  }
};

// Ex√©cuter le script
createTestAppointments();