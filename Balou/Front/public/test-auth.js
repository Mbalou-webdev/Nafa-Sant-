// Script de test de l'authentification - √Ä ex√©cuter dans la console du navigateur

console.log('üîç Test de l\'authentification...');

// V√©rifier les donn√©es stock√©es
const user = JSON.parse(localStorage.getItem("user") || "null");
const token = localStorage.getItem("token");

console.log('üë§ Utilisateur:', user);
console.log('üîë Token:', token ? 'Pr√©sent' : 'Absent');

if (user && token) {
  console.log('‚úÖ Authentification OK');
  console.log('üìã Informations utilisateur:');
  console.log('   - ID:', user._id || user.id);
  console.log('   - Nom:', user.firstName, user.lastName);
  console.log('   - Email:', user.email);
  console.log('   - R√¥le:', user.role);
  
  // Test de l'API avec le token
  console.log('\nüåê Test de l\'API...');
  fetch('http://localhost:5000/api/appointments', {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    }
  })
  .then(response => {
    console.log('üì° Statut de la r√©ponse:', response.status);
    return response.json();
  })
  .then(data => {
    console.log('üì¶ R√©ponse de l\'API:', data);
    if (Array.isArray(data)) {
      console.log(`üìÖ Nombre de rendez-vous trouv√©s: ${data.length}`);
    }
  })
  .catch(error => {
    console.error('‚ùå Erreur API:', error);
  });
} else {
  console.log('‚ùå Authentification manquante');
  if (!user) console.log('   - Utilisateur non connect√©');
  if (!token) console.log('   - Token manquant');
}